# Required Libraries
import cv2
import numpy as np
import matplotlib.pyplot as plt
import urllib.request

# Function to load an image from a URL
def url_to_image(url):
    resp = urllib.request.urlopen(url)
    image = np.asarray(bytearray(resp.read()), dtype="uint8")
    image = cv2.imdecode(image, cv2.IMREAD_COLOR)
    return image

# Image URL (replace with any desired image URL)
image_url = 'https://example.com/sample.jpg'  # Replace with a valid image URL
image = url_to_image(image_url)

# Display Original (RGB) Image
rgb_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)  # Convert BGR to RGB
plt.subplot(2, 2, 1)
plt.imshow(rgb_image)
plt.title('RGB')
plt.axis('off')


# Convert to Grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
plt.subplot(2, 2, 2)
plt.imshow(gray_image, cmap='gray')
plt.title('Grayscale')
plt.axis('off')

# Convert to HSV
hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
plt.subplot(2, 2, 3)
plt.imshow(hsv_image)
plt.title('HSV')
plt.axis('off')

# Convert to Lab
lab_image = cv2.cvtColor(image, cv2.COLOR_BGR2Lab)
plt.subplot(2, 2, 4)
plt.imshow(lab_image)
plt.title('Lab')
plt.axis('off')

# Display all images
plt.show()

# Optional: Save Processed Images
cv2.imwrite('RGB_image.jpg', cv2.cvtColor(rgb_image, cv2.COLOR_RGB2BGR))  # Convert RGB back to BGR for saving
cv2.imwrite('Gray_image.jpg', gray_image)
cv2.imwrite('HSV_image.jpg', cv2.cvtColor(hsv_image, cv2.COLOR_HSV2BGR))  # Convert HSV back to BGR for saving
cv2.imwrite('Lab_image.jpg', cv2.cvtColor(lab_image, cv2.COLOR_Lab2BGR))  # Convert Lab back to BGR for saving



