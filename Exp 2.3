import cv2
import numpy as np
import matplotlib.pyplot as plt

# Function to load image from URL
def load_image_from_url(url):
    arr = np.asarray(bytearray(urlopen(url).read()), dtype=np.uint8)  # Read image data from URL
    image = cv2.imdecode(arr, -1)  # Decode image
    return image

# URL of the input image (example)
image_url = 'https://elements-resized.envatousercontent.com/elements-cover-images/e0cf6433-e9ef-453d-bd6c-55266e8f6160?w=1370&cf_fit=scale-down&q=85&format=auto&s=09508ae65452cea8e01a994790cb39ed0c8ff2dea30d7a451fde0c7ead103e1f'

# Load the input image from URL
image = load_image_from_url(image_url)

# Convert the image to grayscale for morphological operations
image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Choose the structuring element (kernel)
kernel = np.ones((5, 5), np.uint8)

# Apply Erosion
erosion = cv2.erode(image_gray, kernel, iterations=1)
cv2.imwrite('erosion.jpg', erosion)

# Apply Dilation
dilation = cv2.dilate(image_gray, kernel, iterations=1)
cv2.imwrite('dilation.jpg', dilation)

# Apply Opening
opening = cv2.morphologyEx(image_gray, cv2.MORPH_OPEN, kernel)
cv2.imwrite('opening.jpg', opening)

# Apply Closing
closing = cv2.morphologyEx(image_gray, cv2.MORPH_CLOSE, kernel)
cv2.imwrite('closing.jpg', closing)

# Apply Morphological Gradient
gradient = cv2.morphologyEx(image_gray, cv2.MORPH_GRADIENT, kernel)
cv2.imwrite('gradient.jpg', gradient)

# Display the results
titles = ['Original Image', 'Erosion', 'Dilation', 'Opening', 'Closing', 'Gradient']
images = [image_gray, erosion, dilation, opening, closing, gradient]

for i in range(6):
    plt.subplot(2, 3, i+1)
    plt.imshow(images[i], cmap='gray')
    plt.title(titles[i])
    plt.axis('off')
plt.show()
